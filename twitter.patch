Index: src/main/java/com/handson/sentiment/twitter/AppTwitterStream.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/handson/sentiment/twitter/AppTwitterStream.java b/src/main/java/com/handson/sentiment/twitter/AppTwitterStream.java
new file mode 100644
--- /dev/null	(date 1644443569704)
+++ b/src/main/java/com/handson/sentiment/twitter/AppTwitterStream.java	(date 1644443569704)
@@ -0,0 +1,67 @@
+package com.handson.sentiment.twitter;
+
+import org.springframework.stereotype.Service;
+import reactor.core.publisher.EmitterProcessor;
+import reactor.core.publisher.Flux;
+import twitter4j.*;
+import twitter4j.conf.Configuration;
+import twitter4j.conf.ConfigurationBuilder;
+
+import javax.annotation.PostConstruct;
+
+@Service
+public class AppTwitterStream implements StatusListener {
+
+    EmitterProcessor<String> emitterProcessor;
+    public TwitterStream twitterStream;
+
+    @PostConstruct
+    public void init() {
+        ConfigurationBuilder configBuilder = new ConfigurationBuilder();
+        configBuilder.setDebugEnabled(true);
+        configBuilder.setOAuthConsumerKey("0ybPhDyGyIMkXVNsTNJh3PDve");
+        configBuilder.setOAuthConsumerSecret("u73QTeH7uUAyeI0D6jew3dQ5k7N0pweaAf4fLYDAXGD3uRnGhE");
+        configBuilder.setOAuthAccessToken("902505417510715393-S3i0p6oQS3rtRL7GV05rims7kgLzSYY");
+        configBuilder.setOAuthAccessTokenSecret("8SUqDCahQXLcgapFMgqNv5bZR0gWz3ng8T8xg7pOPYoh9");
+
+        twitterStream = new TwitterStreamFactory(configBuilder.build()).getInstance();
+    }
+
+    public Flux<String> filter(String key) {
+        FilterQuery filterQuery = new FilterQuery();
+        String[] keys = {key};
+        filterQuery.track(keys);
+        twitterStream.addListener(this);
+        twitterStream.filter(filterQuery);
+        emitterProcessor = EmitterProcessor.create();
+        emitterProcessor.map(x->x);
+
+        return emitterProcessor;
+    }
+
+    public void shutdown() {
+        this.twitterStream.shutdown();
+        emitterProcessor.onComplete();
+    }
+
+    @Override
+    public void onStatus(Status status) {
+        emitterProcessor.onNext(status.getText());
+        System.out.println(">>> [Twitter STATUS]" + status);;
+    }
+
+    @Override
+    public void onDeletionNotice(StatusDeletionNotice statusDeletionNotice) { }
+
+    @Override
+    public void onTrackLimitationNotice(int i) { }
+
+    @Override
+    public void onScrubGeo(long l, long l1) { }
+
+    @Override
+    public void onStallWarning(StallWarning stallWarning) { }
+
+    @Override
+    public void onException(Exception e) { }
+}
